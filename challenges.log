10:31:07 [TRACE] (1) challenges: [src/main.rs:152] Started.
10:31:07 [TRACE] (1) challenges: [src/main.rs:156] Got arguments.
10:31:07 [TRACE] (1) challenges: [src/main.rs:200] Task: GradeReviews.
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.9126983880996704), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8809523582458496), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9444443583488464), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.8333333730697632), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888359069824), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888359069824), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.3333333432674408), "revgrade": Number(0.7777777314186096), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888359069824), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888359069824), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.3333333432674408), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777314186096), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("Funcionalidade perefita, excelente &quot;estética&quot;, animações e gráficos polidos, uma experiencia refinada. Nenhum aspecto negativo a apontar.       Sugestão - um botão para terminar o jogo em curso e voltar ao menu principal."), String("The game is very well done"), String("This checkers implementation has a clean and appealing pixel-art interface that clearly communicates the game state, such as turns and defeated pieces. Very clever use and reference of art from itch.io and sound effects!      The gameplay logic is functional but the code is very long and repetitive in areas like move calculation, especially between normal pieces and queens - this could be improved by breaking logic into reusable helper functions. Input handling is solid, prioritizing piece selection correctly, but the _unhandled_input method is doing too much work and would benefit from refactoring for readability. Overall the UI is sleek, accessible and clear - very enjoyable to play. Since the game is well-known, there is no need for a &quot;how to play&quot; section, but may be a suggestion to add to the start screen.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("Funcionalidade perefita, excelente &quot;estética&quot;, animações e gráficos polidos, uma experiencia refinada. Nenhum aspecto negativo a apontar.       Sugestão - um botão para terminar o jogo em curso e voltar ao menu principal."), String("The game is very well done"), String("This checkers implementation has a clean and appealing pixel-art interface that clearly communicates the game state, such as turns and defeated pieces. Very clever use and reference of art from itch.io and sound effects!      The gameplay logic is functional but the code is very long and repetitive in areas like move calculation, especially between normal pieces and queens - this could be improved by breaking logic into reusable helper functions. Input handling is solid, prioritizing piece selection correctly, but the _unhandled_input method is doing too much work and would benefit from refactoring for readability. Overall the UI is sleek, accessible and clear - very enjoyable to play. Since the game is well-known, there is no need for a &quot;how to play&quot; section, but may be a suggestion to add to the start screen.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8655753135681152), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.928571343421936), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.8025792837142944), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.9166666865348816), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.3333333432674408), "revgrade": Number(0.6666666865348816), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8055555820465088), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.75), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8194444179534912), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.75), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.75), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9027777910232544), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8472222089767456), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.7777777910232544), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.3611111342906952), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166666865348816), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.3333333432674408), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6666666865348816), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8055555820465088), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.75), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8194444179534912), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.75), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.75), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9027777910232544), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8472222089767456), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.3611111342906952), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("While the game isn&#039;t original, the fact that it allows you to play in three modes—1vs1, 1vsComp on easy mode, and 1vsComp on hard mode—adds some extra excitement.      The color contrast and mouse hover behavior over cells and images don&#039;t really work, making it somewhat awkward. The code is sparsely commented and too centered, as everything is contained within the same scene.      The cell boundaries, due to the rounded corners, sometimes allow clicking in the center to select a cell without actually clicking on the cell itself."), String("Good : The game has option to play with computer which is very nice      Bad:    The color combinations of each boxes could have been more vibrant"), String("Simple tictactoe game, ineresting that there are 3 modes: player vs player, player vs AI (Easy and hard). Follows the normal expected by a tictactoe but intteresting the AI implementation")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("While the game isn&#039;t original, the fact that it allows you to play in three modes—1vs1, 1vsComp on easy mode, and 1vsComp on hard mode—adds some extra excitement.      The color contrast and mouse hover behavior over cells and images don&#039;t really work, making it somewhat awkward. The code is sparsely commented and too centered, as everything is contained within the same scene.      The cell boundaries, due to the rounded corners, sometimes allow clicking in the center to select a cell without actually clicking on the cell itself."), String("Good : The game has option to play with computer which is very nice      Bad:    The color combinations of each boxes could have been more vibrant"), String("Simple tictactoe game, ineresting that there are 3 modes: player vs player, player vs AI (Easy and hard). Follows the normal expected by a tictactoe but intteresting the AI implementation")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8214285969734192), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.6964285969734192), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9464285969734192), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.9166667461395264), "text": String("Is this game original?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.9166666865348816), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.25), "revgrade": Number(0.9166667461395264), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.25), "revgrade": Number(0.8611111640930176), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166666865348816), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.0), "revgrade": Number(1.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.7777777910232544), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166666865348816), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.25), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.25), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8611111640930176), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166666865348816), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("When doing the testing, I noticed that if I start spamming the &quot;Player 1&quot; and &quot;Player 2&quot; buttons while another player is currently playing, at one point the game entered some kind of error state and the Players sprites got duplicated. The duplicated ones stayed on the cell of the turn that gave the error. To solve this easily I would keep a state variable that indicates if a player is currently playing and if so I would disable not only my button but the other players button. As a sanity check, I would keep track of the number of Player sprites (1 and 2) and if the number is larger than 1, I would remove the invalid ones from the game.            In the future, it would be good if the author implemented multiple levels or, to keep things fresh, make the levels procedurally generated to allow infinite replayability.            Just having the option to roll a dice and move the player is kind of boring. It would be fun if (like for example in monopoly) the user gained some kind of power up when stepping on specific tiles. These power ups can be either to give a personal advantage (like move an extra +3 tiles) or to hurt the adversary&#039;s chances (like &quot;the opponent moves back 3 tiles).            Overall, the game shows a lot of potential for improvement and might be a fresh take on the genre, depending on the choices the author makes going forward."), String("The game is well-made and easy to play, as its difficulty and controls are well-balanced.      However, I found it only partially fun. While it&#039;s easy to get into, it&#039;s purely based on luck, with no need for strategy or meaningful player choices.      To improve it, I would suggest adding a special effect when a player lands on certain spaces.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("When doing the testing, I noticed that if I start spamming the &quot;Player 1&quot; and &quot;Player 2&quot; buttons while another player is currently playing, at one point the game entered some kind of error state and the Players sprites got duplicated. The duplicated ones stayed on the cell of the turn that gave the error. To solve this easily I would keep a state variable that indicates if a player is currently playing and if so I would disable not only my button but the other players button. As a sanity check, I would keep track of the number of Player sprites (1 and 2) and if the number is larger than 1, I would remove the invalid ones from the game.            In the future, it would be good if the author implemented multiple levels or, to keep things fresh, make the levels procedurally generated to allow infinite replayability.            Just having the option to roll a dice and move the player is kind of boring. It would be fun if (like for example in monopoly) the user gained some kind of power up when stepping on specific tiles. These power ups can be either to give a personal advantage (like move an extra +3 tiles) or to hurt the adversary&#039;s chances (like &quot;the opponent moves back 3 tiles).            Overall, the game shows a lot of potential for improvement and might be a fresh take on the genre, depending on the choices the author makes going forward."), String("The game is well-made and easy to play, as its difficulty and controls are well-balanced.      However, I found it only partially fun. While it&#039;s easy to get into, it&#039;s purely based on luck, with no need for strategy or meaningful player choices.      To improve it, I would suggest adding a special effect when a player lands on certain spaces.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8829365968704224), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8452380895614624), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9206350445747375), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.8333333134651184), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.888888955116272), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(1.0), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.9444444179534912), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.9444444179534912), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.8333333730697632), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.3333333432674408), "revgrade": Number(0.444444477558136), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333134651184), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.3333333432674408), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.444444477558136), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("The project is well designed, offering both PvP and AI modes with an intermediate difficulty, which makes it more versatile and fun. The option to increase the board size and block cells is creative and adds variety. However, the lack of a main menu and exit button reduces usability. Adding these features would polish the overall experience, but overall the game is already very good and enjoyable."), String("I would have liked to have the option to play against the game itself, and not only with a second player.      Also, I would have liked some sound effects, at least when ending the game."), String("I found the game cool, it’s a quick game.       It would be nice to put the more scattered coins in the game")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("The project is well designed, offering both PvP and AI modes with an intermediate difficulty, which makes it more versatile and fun. The option to increase the board size and block cells is creative and adds variety. However, the lack of a main menu and exit button reduces usability. Adding these features would polish the overall experience, but overall the game is already very good and enjoyable."), String("I would have liked to have the option to play against the game itself, and not only with a second player.      Also, I would have liked some sound effects, at least when ending the game."), String("I found the game cool, it’s a quick game.       It would be nice to put the more scattered coins in the game")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.4166666865348816), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8333333730697632), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.0), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.0), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.0), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.1666666716337204), "revgrade": Number(0.0), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.1666666716337204), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("The game made by the author is a classic &quot;Tic-Tac-Toe&quot;, on a 3 cell grid. In terms of improvements:            The game lacks audio. It would be interesting to include ambient music and sound effects for when a player chooses a cell to play.            It would be interesting if the user could implement some kind of AI to play against the computer for example using minimax algorithm, it would help with the replayability factor when the player does not have someone to play with.            To keep gameplay fresh, the author could add some mechanics like randomly obstructed cells where the players cannot place their choice and thus influence the strategy for victory.            The author could have implemented an option to allow for larger game boards instead of the classic 3x3.             When a player wins, as a visual aid, the author could somehow highlight the winning combination, for example, by blinking the cells (by hiding and showing the sprites).            That being said, it is classic tic-tac-toe, fun for everyone and without demographic restrictions, I just would of liked something different instead of another copy (of the same mechanics) of an already established game."), String("The game is working fine, with no errors, it is a well known game      It should have some instructions for people who never played the game before"), String("A simple Tic Tac Toe game, just like the classic. Nothing fancy.      The game has no issues and works perfectly.      For improvement, I would add an information section (a &#039;How to Play&#039;) to teach someone who has never played Tic Tac Toe before.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("The game made by the author is a classic &quot;Tic-Tac-Toe&quot;, on a 3 cell grid. In terms of improvements:            The game lacks audio. It would be interesting to include ambient music and sound effects for when a player chooses a cell to play.            It would be interesting if the user could implement some kind of AI to play against the computer for example using minimax algorithm, it would help with the replayability factor when the player does not have someone to play with.            To keep gameplay fresh, the author could add some mechanics like randomly obstructed cells where the players cannot place their choice and thus influence the strategy for victory.            The author could have implemented an option to allow for larger game boards instead of the classic 3x3.             When a player wins, as a visual aid, the author could somehow highlight the winning combination, for example, by blinking the cells (by hiding and showing the sprites).            That being said, it is classic tic-tac-toe, fun for everyone and without demographic restrictions, I just would of liked something different instead of another copy (of the same mechanics) of an already established game."), String("The game is working fine, with no errors, it is a well known game      It should have some instructions for people who never played the game before"), String("A simple Tic Tac Toe game, just like the classic. Nothing fancy.      The game has no issues and works perfectly.      For improvement, I would add an information section (a &#039;How to Play&#039;) to teach someone who has never played Tic Tac Toe before.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.2916666567325592), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.5833333134651184), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.0), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.1666666716337204), "revgrade": Number(0.0), "text": String("Is this game original?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.0), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.1666666716337204), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("Plain tic-tac-toe clone from the tutorial. Could try to create different sprites or animations to explore Godot knowledge."), String("The directory arrangement of the project is not well-furnished. The project identification was a bit confusing during the loading phase. Documentation is not clear.       Game design - Normal       Game Play - Easy       Theme - Normal"), String("I could not open the project, not importing the zip or extracting the folder and making a project with it")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("Plain tic-tac-toe clone from the tutorial. Could try to create different sprites or animations to explore Godot knowledge."), String("The directory arrangement of the project is not well-furnished. The project identification was a bit confusing during the loading phase. Documentation is not clear.       Game design - Normal       Game Play - Easy       Theme - Normal"), String("I could not open the project, not importing the zip or extracting the folder and making a project with it")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8586310148239136), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8392857313156128), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.8779762387275696), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.6666666865348816), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8333333730697632), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.7083333134651184), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8333333730697632), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.875), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7916666269302368), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.8333333730697632), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6666666865348816), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7083333134651184), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.875), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7916666269302368), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("Nice animations and end of game tween feature. Very appealing and fun to play."), String("The game is standard tic-tac-toe. While most people will be familiar with the concept, some might not be, so a panel showing the instructions of tic-tac-toe would have been appreciated. Still, I was familiar. While the controls are easy to use, it is not explicitly said that the player should click with the mouse, which is not hard to figure out, but a panel with the controls would have been appreciated.      Outside of that, there are no issues, it&#039;s standard tic-tac-toe.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("Nice animations and end of game tween feature. Very appealing and fun to play."), String("The game is standard tic-tac-toe. While most people will be familiar with the concept, some might not be, so a panel showing the instructions of tic-tac-toe would have been appreciated. Still, I was familiar. While the controls are easy to use, it is not explicitly said that the player should click with the mouse, which is not hard to figure out, but a panel with the controls would have been appreciated.      Outside of that, there are no issues, it&#039;s standard tic-tac-toe.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.922619104385376), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8928571343421936), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9523810148239136), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(1.0), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8333333730697632), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166666865348816), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8611111044883728), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.5), "revgrade": Number(1.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8611111640930176), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166666865348816), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8611111044883728), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8611111640930176), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("The game is the classic &quot;4 in a row&quot;. As improvements, I would point out:            Missing game audio. To keep the players engaged, I would of liked to hear some kind of ambient music and sound effects (for example when clicking the buttons or when placing the balls on the game board).            To keep gameplay fresh, I would have liked if the author implemented some kind of AI that can play in the place of a human.            Instead of just 4 in a row, it would be interesting if the game allowed for custom board dimensions, for example 5x5, 6x6, 10x10 etc. After reviewing the code, I saw that the author used a GridContainer and placed buttons to act as the cells. It would have been simpler if the author used a tilemap, that way he could create custom game boards much more easily programatically and would keep the implementation and scenes &quot;tidier&quot;.            Since the author added a main menu, it would be interesting to see a pause menu when the user presses the Esc key so that he can restart the level or go back to the menu.            In terms of good points:            It is good to see that the author added a scene where he explains how the game works instead of assuming people would instantly know how to play.            The background, buttons and text fonts look good together, adding a good feel for the look of the game.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("The game is the classic &quot;4 in a row&quot;. As improvements, I would point out:            Missing game audio. To keep the players engaged, I would of liked to hear some kind of ambient music and sound effects (for example when clicking the buttons or when placing the balls on the game board).            To keep gameplay fresh, I would have liked if the author implemented some kind of AI that can play in the place of a human.            Instead of just 4 in a row, it would be interesting if the game allowed for custom board dimensions, for example 5x5, 6x6, 10x10 etc. After reviewing the code, I saw that the author used a GridContainer and placed buttons to act as the cells. It would have been simpler if the author used a tilemap, that way he could create custom game boards much more easily programatically and would keep the implementation and scenes &quot;tidier&quot;.            Since the author added a main menu, it would be interesting to see a pause menu when the user presses the Esc key so that he can restart the level or go back to the menu.            In terms of good points:            It is good to see that the author added a scene where he explains how the game works instead of assuming people would instantly know how to play.            The background, buttons and text fonts look good together, adding a good feel for the look of the game.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.3511904776096344), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.7023809552192688), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.0), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.0), "text": String("Is this game original?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.3333333432674408), "revgrade": Number(0.0), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.3333333432674408), "revgrade": Number(0.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.0), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.3333333432674408), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.3333333432674408), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("I dont really get the game. Although I understand the concept. If I just hit spacebar is it me playing or?! and there is no choice its just a variant of a gambling game"), String("The game design is nice, based on luck. Documentation is not found.       Design animation is unique - it stands out in the crowd of tic-tac-toes."), String("In my opinion the game is not even a full turn based game, because both players can play at the same time, and the actions of one player do not change the actions of the second player, apart from that, the game has no mechanics and it&#039;s fully luck dependent. The game is pretty and the themes and assets are well implemented.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("I dont really get the game. Although I understand the concept. If I just hit spacebar is it me playing or?! and there is no choice its just a variant of a gambling game"), String("The game design is nice, based on luck. Documentation is not found.       Design animation is unique - it stands out in the crowd of tic-tac-toes."), String("In my opinion the game is not even a full turn based game, because both players can play at the same time, and the actions of one player do not change the actions of the second player, apart from that, the game has no mechanics and it&#039;s fully luck dependent. The game is pretty and the themes and assets are well implemented.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.90625), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8928571343421936), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9196429252624512), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.75), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7916666269302368), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9583333730697632), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.875), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(0.5), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9166667461395264), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.75), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7916666269302368), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9583333730697632), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.875), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("The music and the board are a nice touch, but using the keyboard instead of the mouse seems like a dirty move, where you didn&#039;t bother to catch the mouse position using the event action and calculating where the mouse click happened. So the game controls are a bit on the low effort.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("The music and the board are a nice touch, but using the keyboard instead of the mouse seems like a dirty move, where you didn&#039;t bother to catch the mouse position using the event action and calculating where the mouse click happened. So the game controls are a bit on the low effort.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.9107142686843872), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8928571343421936), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9285714030265808), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.8888888359069824), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.9444444179534912), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.75), "revgrade": Number(1.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.9444444179534912), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.8888888359069824), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.7222222089767456), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888359069824), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888359069824), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7222222089767456), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("I found the game quite interesting. It&#039;s intuitive, it&#039;s fun, it works well, the player can either win on the first try or lose in the first two moves. The only thing that could be improved would be the design, but it&#039;s very good."), String("I would have liked to have the option to play against the game itself, and not only with a second player.      Visually it is not very enjoyable.      I liked the sound effects.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("I found the game quite interesting. It&#039;s intuitive, it&#039;s fun, it works well, the player can either win on the first try or lose in the first two moves. The only thing that could be improved would be the design, but it&#039;s very good."), String("I would have liked to have the option to play against the game itself, and not only with a second player.      Visually it is not very enjoyable.      I liked the sound effects.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8258928656578064), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.7589285969734192), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.8928571343421936), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(0.75), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.75), "text": String("Is this game original?")}, Object {"autgrade": Number(0.75), "revgrade": Number(1.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.8055555820465088), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.625), "revgrade": Number(0.9166667461395264), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.8611111640930176), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.8888888359069824), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(0.875), "revgrade": Number(0.888888955116272), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.625), "revgrade": Number(0.6944444179534912), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.25), "revgrade": Number(0.75), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.75), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8055555820465088), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.625), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8611111640930176), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888359069824), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.875), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.625), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6944444179534912), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.25), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.75), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("The project is clear, functional and easy to play. The interface is simple and intuitive and the intermediate AI difficulty makes the game more engaging. However, replayability is limited since there is only one AI level and no PvP option. Adding multiple difficulty levels or a two-player mode would make the experience richer and more enjoyable, a quit button is also something that the game should have. Overall, it’s a solid project with good design and strong potential for further improvement."), String("Good: None            Bad: I think The Game is not a True turn based game according to the Activity  Rule       after each press , automatically the next turn gets assigned . it is more like playing with a computer but simultaneously which is against the rule of the activity"), String("The game is easy to play, simple, intuitive, but it could use some upgrades to make it different."), String("Standard tic tac toe with an AI. While the concept would be familiar to most people, some might not know. So a panel with instructions would be appreciated.      Controlled with the mouse, easy to figure out, but a panel saying &quot;Control with the mouse&quot; would have been appreciated.            Other than that, it&#039;s standard tic tac toe.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("The project is clear, functional and easy to play. The interface is simple and intuitive and the intermediate AI difficulty makes the game more engaging. However, replayability is limited since there is only one AI level and no PvP option. Adding multiple difficulty levels or a two-player mode would make the experience richer and more enjoyable, a quit button is also something that the game should have. Overall, it’s a solid project with good design and strong potential for further improvement."), String("Good: None            Bad: I think The Game is not a True turn based game according to the Activity  Rule       after each press , automatically the next turn gets assigned . it is more like playing with a computer but simultaneously which is against the rule of the activity"), String("The game is easy to play, simple, intuitive, but it could use some upgrades to make it different."), String("Standard tic tac toe with an AI. While the concept would be familiar to most people, some might not know. So a panel with instructions would be appreciated.      Controlled with the mouse, easy to figure out, but a panel saying &quot;Control with the mouse&quot; would have been appreciated.            Other than that, it&#039;s standard tic tac toe.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.4166666567325592), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8333333134651184), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.0), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.0), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.0), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.0), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.1666666716337204), "revgrade": Number(0.0), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.1666666716337204), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.0), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("It&#039;s an easy-to-play, self-explanatory game, as it&#039;s a well-known game with no variations from the original.      The interface is simple but understandable, as the figures are identifiable and the contrast is ideal for those with visual impairments.      The final message is clear about the winner, and it&#039;s easy to play, as all you need to do is click the mouse on the cell you want to choose. The cell boundaries are clearly defined.      I think the script code could be improved with more comments to better understand what each part does."), String("Implementação sem erros detectados, interface intuitiva.      Teria sido interessante ver uma variação do jogo do galo tradicional. Poderiam ter sido implementados efeitos sonoros para melhorar o &quot;feedback&quot; do jogo."), String("Its a simple tictactoe game, there is not mutch to say. Normal player vs player game")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("It&#039;s an easy-to-play, self-explanatory game, as it&#039;s a well-known game with no variations from the original.      The interface is simple but understandable, as the figures are identifiable and the contrast is ideal for those with visual impairments.      The final message is clear about the winner, and it&#039;s easy to play, as all you need to do is click the mouse on the cell you want to choose. The cell boundaries are clearly defined.      I think the script code could be improved with more comments to better understand what each part does."), String("Implementação sem erros detectados, interface intuitiva.      Teria sido interessante ver uma variação do jogo do galo tradicional. Poderiam ter sido implementados efeitos sonoros para melhorar o &quot;feedback&quot; do jogo."), String("Its a simple tictactoe game, there is not mutch to say. Normal player vs player game")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.875), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8452380299568176), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9047619700431824), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.3333333432674408), "revgrade": Number(0.7777777910232544), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.8333333730697632), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888359069824), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(1.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.8888888359069824), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.3333333432674408), "revgrade": Number(0.7777777910232544), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.3333333432674408), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888359069824), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888359069824), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.3333333432674408), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("Jogo perfeitamente funcional, controlos fáceis, interface simples.       Foi interessante adaptação do jogo do galo para um tabuleiro 4x4, para tornar o jogo mais interessante poderia ser implementado um &quot;modo dificil&quot; num tabuleiro 10x10 em que algumas posições estariam bloqueadas não permitindo que se jogasse nessa casa."), String("Its an interesting concept trying to make tic tac toe a 4x4 iinstead of a 3x3 but honestly i feel like its a bad choice because the chance of draw in the game increase a lot"), String("The clean grid layout and clear indication of the next player are strong design elements that make the game easy to understand at a glance. The game is intuitive and since it is a well-known concept, easy to play.      However, the blue tiles and gray sidebar feel a bit plain and lack visual personality, which may reduce player engagement. Consider adding subtle textures, gradients, or thematic colours or fonts to make the interface feel more polished and lively.       To make it feel more like a game, maybe consider adding a landing screen with &quot;start game&quot; button and an option to exit the game.            The code is generally clear and well-structured, with good use of comments that make it easy to follow. There are a few areas that could be improved for maintainability and performance:      - the check_win() function repeats sum calculations on every loop iteration and could be optimized by separating row, column, and diagonal checks into cleaner helper functions      - using constants for magic numbers like 4 (board size) and 16 (max moves) would make the code more scalable and easier to adjust later      - simple error checks (e.g. ensuring circle_scene and square_scene are not null) would improve robustness")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("Jogo perfeitamente funcional, controlos fáceis, interface simples.       Foi interessante adaptação do jogo do galo para um tabuleiro 4x4, para tornar o jogo mais interessante poderia ser implementado um &quot;modo dificil&quot; num tabuleiro 10x10 em que algumas posições estariam bloqueadas não permitindo que se jogasse nessa casa."), String("Its an interesting concept trying to make tic tac toe a 4x4 iinstead of a 3x3 but honestly i feel like its a bad choice because the chance of draw in the game increase a lot"), String("The clean grid layout and clear indication of the next player are strong design elements that make the game easy to understand at a glance. The game is intuitive and since it is a well-known concept, easy to play.      However, the blue tiles and gray sidebar feel a bit plain and lack visual personality, which may reduce player engagement. Consider adding subtle textures, gradients, or thematic colours or fonts to make the interface feel more polished and lively.       To make it feel more like a game, maybe consider adding a landing screen with &quot;start game&quot; button and an option to exit the game.            The code is generally clear and well-structured, with good use of comments that make it easy to follow. There are a few areas that could be improved for maintainability and performance:      - the check_win() function repeats sum calculations on every loop iteration and could be optimized by separating row, column, and diagonal checks into cleaner helper functions      - using constants for magic numbers like 4 (board size) and 16 (max moves) would make the code more scalable and easier to adjust later      - simple error checks (e.g. ensuring circle_scene and square_scene are not null) would improve robustness")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.903769850730896), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.9285714030265808), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.878968358039856), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.9444444179534912), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8333333730697632), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.8055555820465088), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.8333333730697632), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8055555820465088), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("The game directory is well organized. Documentation is clear. Nice touch of sprites. Gothic horror feel.       Nothing to improve except for graphics.       The author gave a solid package to play with.       A bit of code explanation would be really helpful."), String("The game is a tic-tac-to with diferent shapes, and the overall theme and assets go well with each other, the game doesn&#039;t explain how to play niehter how to win, but it&#039;s a tic-tac-toe so i assume the author is expecting us to know this things.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("The game directory is well organized. Documentation is clear. Nice touch of sprites. Gothic horror feel.       Nothing to improve except for graphics.       The author gave a solid package to play with.       A bit of code explanation would be really helpful."), String("The game is a tic-tac-to with diferent shapes, and the overall theme and assets go well with each other, the game doesn&#039;t explain how to play niehter how to win, but it&#039;s a tic-tac-toe so i assume the author is expecting us to know this things.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8015873432159424), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8928571343421936), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.7103174924850464), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.7222222089767456), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.25), "revgrade": Number(0.6944444179534912), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.7222222089767456), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.6388888955116272), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.6666666865348816), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.6666666865348816), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7222222089767456), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.6111111044883728), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.5), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7222222089767456), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.25), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6944444179534912), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7222222089767456), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6388888955116272), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6666666865348816), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6666666865348816), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7222222089767456), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6111111044883728), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.5), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("Cool game, with a good variant of the normal tic tac toe"), String("It is fine game, one i had never played before. Didn&#039;t know there was an ultimate tic-tac-toe game, very fun to play      Liked the use of the change_scene_to_file() method, really good      The game also has clear instructions")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("Cool game, with a good variant of the normal tic tac toe"), String("It is fine game, one i had never played before. Didn&#039;t know there was an ultimate tic-tac-toe game, very fun to play      Liked the use of the change_scene_to_file() method, really good      The game also has clear instructions")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8720238208770752), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.7857142686843872), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9583333730697632), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(1.0), "text": String("Is this game original?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.9166666865348816), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(0.9166666865348816), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.888888955116272), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.8055555820465088), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.6666666865348816), "revgrade": Number(1.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(1.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(0.5), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.888888955116272), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166666865348816), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166666865348816), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8055555820465088), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.6666666865348816), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("Your “Collect Coins” game is clear and engaging, with a well-defined objective of reaching 10 coins. The inclusion of a main menu, quit option, and restart function shows good attention to usability. However, it lacks a computer mode, which could make the game more versatile. Still, as a PvP experience, it works very well and feels complete."), String("A very interesting Tic Tac Toe variant with interesting gameplay options.      The interface is pleasant and easily understandable, and the wow factor created by the extra music and animations is fun.      At the beginning of the game, the player starts with two blocked cells, but this is never configured before starting the game, and in the menu, under the blocked cells section, no blocked units appear. I think this is a minor bug.      Furthermore, the code is extensive and sparsely commented for such length, and everything is centralized in the same scene."), String("Good : None            Bad: The game has bug, initially 2 blocks show &quot;Block cells&quot; and it is random . after pressing new game the bug would go away but not all the time . if number of grid sizes is increased then the problem is found to solved but then i found it to be random . the option play with Ai does not work either .             Suggest: Try to make a simpler solution with stability")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("Your “Collect Coins” game is clear and engaging, with a well-defined objective of reaching 10 coins. The inclusion of a main menu, quit option, and restart function shows good attention to usability. However, it lacks a computer mode, which could make the game more versatile. Still, as a PvP experience, it works very well and feels complete."), String("A very interesting Tic Tac Toe variant with interesting gameplay options.      The interface is pleasant and easily understandable, and the wow factor created by the extra music and animations is fun.      At the beginning of the game, the player starts with two blocked cells, but this is never configured before starting the game, and in the menu, under the blocked cells section, no blocked units appear. I think this is a minor bug.      Furthermore, the code is extensive and sparsely commented for such length, and everything is centralized in the same scene."), String("Good : None            Bad: The game has bug, initially 2 blocks show &quot;Block cells&quot; and it is random . after pressing new game the bug would go away but not all the time . if number of grid sizes is increased then the problem is found to solved but then i found it to be random . the option play with Ai does not work either .             Suggest: Try to make a simpler solution with stability")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8501984477043152), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.7678571343421936), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9325397610664368), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.9444444179534912), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.9166667461395264), "text": String("Is this game original?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.8888888955116272), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8611111640930176), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.9444444179534912), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8055555820465088), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(0.75), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888955116272), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888955116272), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.25), "revgrade": Number(0.9166667461395264), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888955116272), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8611111640930176), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8055555820465088), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888955116272), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888955116272), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.25), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9166667461395264), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("The game is very well implemented, i tested it, and worked fine.      The ability to drag and drop the game&#039;s assets is very good.      It is a well known game, that is why i was able to play it without problems, but there are no instructions to new gamers for chess games"), String("It&#039;s just a standard chess game, identical to the original—nothing more.      However, it has a few issues: you can&#039;t reset the board, there are no instructions, and there&#039;s no indicator for whose turn it is.      It would be much better if these features were added, and if the pieces moved with a click instead of having to drag them.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("The game is very well implemented, i tested it, and worked fine.      The ability to drag and drop the game&#039;s assets is very good.      It is a well known game, that is why i was able to play it without problems, but there are no instructions to new gamers for chess games"), String("It&#039;s just a standard chess game, identical to the original—nothing more.      However, it has a few issues: you can&#039;t reset the board, there are no instructions, and there&#039;s no indicator for whose turn it is.      It would be much better if these features were added, and if the pieces moved with a click instead of having to drag them.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.7891864776611328), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8571428656578064), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.7212300896644592), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.75), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.25), "revgrade": Number(0.5555555820465088), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.5277777910232544), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.5277777910232544), "text": String("The game is fun to play?")}, Object {"autgrade": Number(0.75), "revgrade": Number(0.6805555820465088), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.6388888955116272), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.5277777910232544), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.9583333730697632), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.6805555820465088), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.694444477558136), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.75), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.25), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.5555555820465088), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.5277777910232544), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.5277777910232544), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.75), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6805555820465088), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6388888955116272), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.5277777910232544), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9583333730697632), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6805555820465088), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.694444477558136), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("I like the design, I like the fact that we can see who the next player is, the game is intuitive, easy to play, and works well."), String("Standard tic-tac-toe. While the concept might be familiar to most people, some people might not know, so a panel with instructions on how to play would have been appreciated.      Controlled with the mouse, easy to use, but still, could be told to the player.      Other than that, it&#039;s standard tic tac toe.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("I like the design, I like the fact that we can see who the next player is, the game is intuitive, easy to play, and works well."), String("Standard tic-tac-toe. While the concept might be familiar to most people, some people might not know, so a panel with instructions on how to play would have been appreciated.      Controlled with the mouse, easy to use, but still, could be told to the player.      Other than that, it&#039;s standard tic tac toe.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.726190447807312), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.6785714030265808), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.773809552192688), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(0.7777777910232544), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.6388888955116272), "text": String("Is this game original?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.9444444179534912), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.7777777910232544), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.6944444179534912), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(0.5), "revgrade": Number(0.6666666865348816), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888955116272), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.6666666865348816), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8333333134651184), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.7222222089767456), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888955116272), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8888888955116272), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.0), "revgrade": Number(0.6666666865348816), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6388888955116272), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444444179534912), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7777777910232544), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6944444179534912), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.5), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6666666865348816), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888955116272), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6666666865348816), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333134651184), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7222222089767456), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888955116272), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8888888955116272), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.0), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.6666666865348816), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("Nothing to add. A simple TicTacToe")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("Nothing to add. A simple TicTacToe")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("student")], "student")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("totgrade"), value: Context(Number(0.8968254327774048), ["totgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("autgrade"), value: Context(Number(0.8571428656578064), ["autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("revgrade"), value: Context(Number(0.9365079998970032), ["revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("questions"), value: Context(Array [Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Is this game a turn based game?")}, Object {"autgrade": Number(0.1666666716337204), "revgrade": Number(0.9444445371627808), "text": String("Is this game original?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("This game is beta quality (feature complete, no major bugs)?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.8333333730697632), "text": String("The game is fun to play?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the player&#39;s goals clear?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("The mechanics and dynamics keep the player motivated and engaged?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Are the game controls easy to use?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(1.0), "text": String("Are there meaningful choices?")}, Object {"autgrade": Number(1.0), "revgrade": Number(0.888888955116272), "text": String("The assets (characters, animations, etc.) match the theme?")}, Object {"autgrade": Number(0.8333333134651184), "revgrade": Number(0.8333333730697632), "text": String("Is the game difficulty adequate for the demographic target?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation of the game?")}, Object {"autgrade": Number(1.0), "revgrade": Number(1.0), "text": String("Did you found the implementation easy to understand?")}, Object {"autgrade": Number(0.1666666716337204), "revgrade": Number(0.7222222089767456), "text": String("Did you found the documentation of the implementation?")}], ["questions"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "0", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "0", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.1666666716337204), ["questions", "1", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.9444445371627808), ["questions", "1", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "2", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "2", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "3", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "3", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "4", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "4", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "5", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "5", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "6", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "6", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "7", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "7", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "8", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.888888955116272), ["questions", "8", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.8333333134651184), ["questions", "9", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.8333333730697632), ["questions", "9", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "10", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "10", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(1.0), ["questions", "11", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(1.0), ["questions", "11", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("text")], "this.text")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.autgrade"), value: Context(Number(0.1666666716337204), ["questions", "12", "autgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "pct", params: [PathAndJson { relative_path: Some("this.revgrade"), value: Context(Number(0.7222222089767456), ["questions", "12", "revgrade"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("feedbacks"), value: Context(Array [Object {"feedback": Array [String("It is a simple game that runs smoothly.      I would have liked to have the option to play against the game itself, and not only with a second player.      Also, I would have liked some sound effects, at least when ending the game."), String("I like this game and have no comments"), String("Since I don&#039;t speak Portuguese, I could not understand the starting page and the rules. Good thing I am familiar with the game! This is just a me-issue though, not a critique point :)       The game board layout is clear, and the colour distinction between players (blue and red) is easy to read, which helps with quick recognition. However, the large amount of empty white space makes the interface feel unbalanced and unfinished. Consider centering the board or adding a background frame or grid to make the play area feel more visually cohesive. Also, the UI text at the top could benefit from consistent alignment and a more polished font style to improve overall presentation and readability.            Your code is clear and logically organized, making it easy to understand how the game flow works. I would&#039;ve liked some comments to document the functions.")], "label": String("Design Feedback")}], ["feedbacks"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("label")], "this.label")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("this.feedback"), value: Context(Array [String("It is a simple game that runs smoothly.      I would have liked to have the option to play against the game itself, and not only with a second player.      Also, I would have liked some sound effects, at least when ending the game."), String("I like this game and have no comments"), String("Since I don&#039;t speak Portuguese, I could not understand the starting page and the rules. Good thing I am familiar with the game! This is just a me-issue though, not a critique point :)       The game board layout is clear, and the colour distinction between players (blue and red) is easy to read, which helps with quick recognition. However, the large amount of empty white space makes the interface feel unbalanced and unfinished. Consider centering the board or adding a background frame or grid to make the play area feel more visually cohesive. Also, the UI text at the top could benefit from consistent alignment and a more polished font style to improve overall presentation and readability.            Your code is clear and logically organized, making it easy to understand how the game flow works. I would&#039;ve liked some comments to document the functions.")], ["feedbacks", "0", "feedback"]) }], hash: {}
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:07 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([Named("title")], "title")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering helper: "each", params: [PathAndJson { relative_path: Some("report"), value: Context(Array [String("l59366"), String("m60716"), String("m60727"), String("m60739"), String("m60791"), String("m60868"), String("m61727"), String("m61990"), String("m63898"), String("m66663"), String("m66886"), String("m67019"), String("m67049"), String("m68102"), String("m68106"), String("m68183"), String("m68209"), String("m68290"), String("m70294"), String("m70370"), String("m70380")], ["report"]) }], hash: {}
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
10:31:08 [DEBUG] (1) handlebars::render: Rendering value: Path(Relative(([], "this")))
